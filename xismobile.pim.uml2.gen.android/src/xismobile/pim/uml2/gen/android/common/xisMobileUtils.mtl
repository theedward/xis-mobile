[comment encoding = UTF-8 /]
[module xisMobileUtils('http://www.eclipse.org/uml2/4.0.0/UML')]


[comment
	Domain View queries
/]
[query public getXisEntity(c : Class) : Stereotype =
	c.getAppliedStereotype('XIS-Mobile::XisEntity')
/]

[query public isXisEntity(c : Class) : Boolean =
	not c.getXisEntity().oclIsUndefined()
/]

[query public isToPersist(el : Element) : Boolean =
	el.getTaggedValue('XIS-Mobile::XisEntity', 'persist') = true
/]

[query public getXisAttributes(c : Class) : Set(Property) =
	c.ownedAttribute->select(p : Property | p.isXisAttribute())
/]

[query public getXisAttribute(p : Property) : Stereotype =
	p.getAppliedStereotype('XIS-Mobile::XisAttribute')
/]

[query public isXisAttribute(p : Property) : Boolean =
	not p.getXisAttribute().oclIsUndefined()
/]

[query public isNullable(p : Property) : Boolean =
	p.getTaggedValue('XIS-Mobile::XisAttribute', 'isNullable') = true
/]

[query public isKey(p : Property) : Boolean =
	p.getTaggedValue('XIS-Mobile::XisAttribute', 'isKey') = true
/]

[comment 
	InteractionSpace View Queries
/]
[query public getXisInteractionSpace(c : Class) : Stereotype =
	c.getAppliedStereotype('XIS-Mobile::XisInteractionSpace')
/]

[query public isXisInteractionSpace(c : Class) : Boolean =
	not c.getXisInteractionSpace().oclIsUndefined()
/]

[query public getAllXisInteractionSpaces(m : Model) : OrderedSet(Class) =
	m.allOwnedElements()->selectByType(Class)->select(
		c : Class | c.isXisInteractionSpace() = true)
/]

[query public isMainScreen (el : Element) : Boolean =
	el.getTaggedValue('XIS-Mobile::XisInteractionSpace', 'isMainScreen') = true
/]

[query public getXisCompositeWidget(c : Class) : Stereotype =
	c.getAppliedStereotype('XIS-Mobile::XisCompositeWidget')
/]

[query public isXisCompositeWidget(c : Class) : Boolean =
	not c.getXisCompositeWidget().oclIsUndefined()
/]

[query public isList(c : Class) : Boolean =
	getEnumValue(c.getValue(
		c.getXisCompositeWidget(), 'type')
	) = 'List'
/]

[query public isMenu(c : Class) : Boolean =
	getEnumValue(c.getValue(
		c.getXisCompositeWidget(), 'type')
	) = 'Menu'
/]

[query public isListGroup(c : Class) : Boolean =
	getEnumValue(c.getValue(
		c.getXisCompositeWidget(), 'type')
	) = 'LisGroup'
/]

[query public isMenuGroup(c : Class) : Boolean =
	getEnumValue(c.getValue(
		c.getXisCompositeWidget(), 'type')
	) = 'MenuGroup'
/]

[query public isItem(c : Class) : Boolean =
	getEnumValue(c.getValue(
		c.getXisCompositeWidget(), 'type')
	) = 'Item'
/]

[query public isXisAction(o : Operation) : Boolean =
	not o.getXisAction().oclIsUndefined()
/]

[query public hasXisAction(c : Class) : Boolean =
	c.ownedOperation->select(o : Operation | o.isXisAction() = true)->size() > 0
/]

[query public getXisAction(o : Operation) : Stereotype =
	o.getAppliedStereotype('XIS-Mobile::XisAction')
/]

[query public getXisAction(item : Class) : Operation =
	item.ownedOperation->select(o : Operation | o.isXisAction())->at(1)
/]

[query public isCancelOperation(o : Operation) : Boolean = 
	getEnumValue(o.getValue(
		o.getXisAction(), 'type')
	) = 'Cancel'
/]

[query public isNavigateToOperation(o : Operation) : Boolean = 
	getEnumValue(o.getValue(
		o.getXisAction(), 'type')
	) = 'NavigateTo'
/]

[query public isSaveOperation(o : Operation) : Boolean = 
	getEnumValue(o.getValue(
		o.getXisAction(), 'type')
	) = 'Save'
/]

[query public isDeleteteOperation(o : Operation) : Boolean = 
	getEnumValue(o.getValue(
		o.getXisAction(), 'type')
	) = 'Delete'
/]

[query public getXisArgument(p : Parameter) : Stereotype = 
	p.getAppliedStereotype('XIS-Mobile::XisArgument')
/]

[query public isXisArgument(p : Parameter) : Boolean = 
	not p.getXisArgument().oclIsUndefined()
/]

[query public getXisArguments(o : Operation) : OrderedSet(Parameter) =
	o.ownedParameter->select(p : Parameter | p.isXisArgument())
/]

[query public getXisArgumentValue(p : Parameter, key : String) : String = 
	p.getValue(p.getXisArgument(), key)
/]

[query public XisArgumentExist(o : Operation, name : String, key : String) : Boolean =
	not o.getXisArgumentValueByName(name, key).oclIsUndefined()
/]

[query public getXisArgumentValueByName(o : Operation, name : String, key : String) : String = 
	let par : Sequence(Parameter) = o.ownedParameter->select(
		p : Parameter | p.isXisArgument() and p.name = name)->asSequence() in
	if not par->oclIsUndefined() and par->size() = 1
	then par->at(1).getXisArgumentValue(key)
	else null
	endif
/]

[query public hasMenu(c : Class) : Boolean = 
	let menu : Collection(Class) = c.ownedElement->selectByType(Class) in
	menu->select(m : Class | m.isMenu())->size() = 1
/]

[query public getMenus(c : Class) : OrderedSet(Class) =
	c.ownedElement->selectByType(Class)->select(
		m : Class | m.isXisCompositeWidget() and m.isMenu())
/]

[query public getMenu(c : Class) : Class = 
	c.getMenus()->at(1)
/]

[query public getItems(c : Class) : OrderedSet(Class) = 
	c.ownedElement->selectByType(Class)->select(
		i : Class | i.isItem())
/]

[query public getXisWidget(c : Class) : Stereotype =
	c.getAppliedStereotype('XIS-Mobile::XisWidget')
/]

[query public isLabel(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisLabel').oclIsUndefined()
/]

[query public isTextBox(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisTextBox').oclIsUndefined()
/]

[query public isButton(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisButton').oclIsUndefined()
/]

[query public isDatePicker(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisDatePicker').oclIsUndefined()
/]

[query public isTimePicker(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisTimePicker').oclIsUndefined()
/]

[query public isLink(c : Class) : Boolean = 
	not c.getAppliedStereotype('XIS-Mobile::XisLink').oclIsUndefined()
/]

[query public getXisWidgetValue(c : Class, s : Stereotype) : String =
	c.getValue(s, 'value')
/]

[query public getEnumValue(el : OclAny) : OclAny =
	let eValue : EnumerationLiteral = el.oclAsType(EnumerationLiteral) in
	if not eValue.oclIsUndefined() then
		eValue.name
	else 
		null
	endif
/]

[query public getTaggedValue(stereotypedElement : Element, stereotypeName : String, propertyName : String) : OclAny = 
	let stereotype : Stereotype = stereotypedElement.getAppliedStereotype(stereotypeName) in
	if not stereotype.oclIsUndefined() then
		stereotypedElement.getValue(stereotype, propertyName)
	else 
		null
	endif
/]

[comment]TEMPLATES AREA[/comment]

[template public writeTODO(a : OclAny)]
// TODO: To be implemented...
[/template]
