[comment encoding = UTF-8 /]
[module widget('http://www.eclipse.org/uml2/4.0.0/UML')]

[import xismobile::pim::uml2::gen::android::common::xisMobileUtils /]

[template public getWidgetName(c : Class) post (trim())]
[if (c.isXisLabel())]
label[c.name.toUpperFirst()/]
[elseif (c.isXisTextBox())]
editText[c.name.toUpperFirst()/]
[elseif (c.isXisCheckBox())]
checkBox[c.name.toUpperFirst()/]
[elseif (c.isXisButton())]
button[c.name.toUpperFirst()/]
[elseif (c.isXisLink())]
link[c.name.toUpperFirst()/]
[elseif (c.isXisImage())]
image[c.name.toUpperFirst()/]
[elseif (c.isXisDatePicker())]
datePicker[c.name.toUpperFirst()/]
[elseif (c.isXisTimePicker())]
timePicker[c.name.toUpperFirst()/]
[elseif (c.isXisWebView())]
webView[c.name.toUpperFirst()/]
[elseif (c.isXisMapView())]
mapView[c.name.toUpperFirst()/]
[elseif (c.isList())]
list[c.name.toUpperFirst()/]
[/if]
[/template]

[template public initializeWidget(c : Class) post (trim())]
[if (c.isXisLabel())]
XisLabel label[c.name.toUpperFirst()/] = (XisLabel)findViewById(R.id.label[c.name.toUpperFirst()/]);
[elseif (c.isXisTextBox())]
XisTextBox editText[c.name.toUpperFirst()/] = (XisTextBox)findViewById(R.id.editText[c.name.toUpperFirst()/]);
[elseif (c.isXisCheckBox())]
XisCheckBox checkBox[c.name.toUpperFirst()/] = (XisCheckBox)findViewById(R.id.checkBox[c.name.toUpperFirst()/]);
[elseif (c.isXisButton())]
XisButton button[c.name.toUpperFirst()/] = (XisButton)findViewById(R.id.button[c.name.toUpperFirst()/]);
[elseif (c.isXisLink())]
XisLink link[c.name.toUpperFirst()/] = (XisLink)findViewById(R.id.link[c.name.toUpperFirst()/]);
[elseif (c.isXisImage())]
XisImage image[c.name.toUpperFirst()/] = (XisImage)findViewById(R.id.image[c.name.toUpperFirst()/]);
[elseif (c.isXisDatePicker())]
XisDatePicker datePicker[c.name.toUpperFirst()/] = (XisDatePicker)findViewById(R.id.datePicker[c.name.toUpperFirst()/]);
[elseif (c.isXisTimePicker())]
XisTimePicker timePicker[c.name.toUpperFirst()/] = (XisTimePicker)findViewById(R.id.timePicker[c.name.toUpperFirst()/]);
[elseif (c.isXisWebView())]
XisWebView web[c.name.toUpperFirst()/] = (XisWebView)findViewById(R.id.web[c.name.toUpperFirst()/]);
[elseif (c.isXisMapView())]
XisMapView map[c.name.toUpperFirst()/] = (XisMapView)findViewById(R.id.map[c.name.toUpperFirst()/]);
[/if]
[c.writeXisGestureManager()/]
[/template]

[template public writeXisGestureManager(c : Class)]
[let name : String = c.getWidgetName()]
[c.getWidgetName()/].setXisGestureManager(new XisGestureManager() {
	[for (g : Class | c.getWidgetGestures())]
	@Override
	public void onTapGesture() {
		// TODO Auto-generated method stub
	}
	[/for]
	@Override
	public void onDoubleTapGesture() {
		// TODO Auto-generated method stub
	}

	@Override
	public void onLongTapGesture() {
		// TODO Auto-generated method stub
	}

	@Override
	public void onSwipeGesture() {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void onStretchGesture() {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void onPinchGesture() {
		// TODO Auto-generated method stub
	}
});
[/let]
[/template]

[template public name(arg : Type)]
	template_expression
[/template]


[template public writeLabel(c : Class)]
<TextView
	android:id="@+id/label[c.name.toUpperFirst()/]"
	android:layout_width="fill_parent"
	android:layout_height="wrap_content"
	android:text="[c.getXisWidgetValue(c.getXisLabel())/]"
/>
[/template]

[template public writeTextBox(c : Class)]
<EditText
	android:id="@+id/editText[c.name.toUpperFirst()/]"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	android:layout_centerHorizontal="true"
	android:ems="10"
	[if (c.getXisTexBoxLines() > 1)]
	android:inputType="textMultiLine"
	[/if]
	android:minLines="[c.getXisTexBoxLines()/]"
	android:gravity="top"
	android:scrollbars="vertical"
	[if (c.XisTextBoxHasHint())]
	android:hint="[c.getXisTexBoxHint()/]"
	[/if]
/>
[/template]

[template public writeCheckBox(c : Class)]
<CheckBox android:id="@+id/checkBox[c.name.toUpperFirst()/]"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    [if (c.hasXisAction())]
	android:onClick="[c.getXisAction().name.toLowerFirst()/]"
	[/if]
	android:text="[c.getXisWidgetValue(c.getXisCheckBox())/]"
/>
[/template]

[template public writeButton(c : Class)]
<Button
	android:id="@+id/button[c.name.toUpperFirst()/]"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	[if (c.hasXisAction())]
	android:onClick="[c.getXisAction().name.toLowerFirst()/]"
	[/if]
	android:text="[c.getXisWidgetValue(c.getXisButton())/]"
/>
[/template]

[template public writeLink(c : Class)]
<TextView
	android:id="@+id/link[c.name.toUpperFirst()/]"
	android:layout_width="fill_parent"
	android:layout_height="wrap_content"
	android:autolink="web"
	android:text="[c.getXisLinkURL()/]"
/>
[/template]

[template public writeImageView(c : Class)]
<ImageView
	android:id="@+id/image[c.name.toUpperFirst()/]"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	android:src="[c.getXisImagePath()/]"
/>
[/template]

[template public writeDatePicker(c : Class)]
<Button
	android:id="@+id/datePicker[c.name.toUpperFirst()/]"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	android:onClick="showDatePicker[c.name.toUpperFirst()/]Dialog"
	android:text="[c.getXisDatePickerValue()/]"
/>
[/template]

[template public writeTimePicker(c : Class)]
<Button
	android:id="@+id/timePicker[c.name.toUpperFirst()/]"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	android:onClick="showTimePicker[c.name.toUpperFirst()/]Dialog"
	android:text="[c.getXisTimePickerValue()/]"
/>
[/template]

[template public writeWebView(c : Class)]
<WebView xmlns:android="http://schemas.android.com/apk/res/android"
	android:id="@+id/webView[c.name.toUpperFirst()/]"
	android:layout_width="fill_parent"
	android:layout_height="fill_parent"
/>
[/template]

[template public writeMapView(c : Class)]
<com.google.android.maps.MapView
	xmlns:android="http://schemas.android.com/apk/res/android"
	android:id="@+id/mapView[c.name.toUpperFirst()/]"
	android:layout_width="fill_parent"
	android:layout_height="fill_parent"
	android:clickable="true"
	android:apiKey="Your Maps API Key goes here"
/>
[/template]

[template public writeListView(c : Class)]
<ListView
	android:id="@android:id/list"
	android:layout_width="match_parent"
	android:layout_height="wrap_content"
	android:layout_alignParentTop="true"
	android:layout_centerHorizontal="true"
/>
[/template]
